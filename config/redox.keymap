/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&lt 2 GRAVE  &kp N1  &kp N2  &kp N3        &kp N4     &kp N5                                                                  &kp N6  &kp N7     &kp N8     &kp N9    &kp N0    &lt 3 MINUS
&kp TAB      &kp Q   &kp W   &kp E         &kp R      &kp T   &mo 1                                          &mo 1            &kp Y   &kp U      &kp I      &kp O     &kp P     &kp EQUAL
&kp ESCAPE   &kp A   &kp S   &kp D         &kp F      &kp G   &kp LBKT                                       &kp RBKT         &kp H   &kp J      &kp K      &kp L     &kp SEMI  &kp SQT
&kp LSHFT    &kp Z   &kp X   &kp C         &kp V      &kp B   &lt 3 CAPSLOCK  &kp RET         &kp DEL        &lt 3 BACKSLASH  &kp N   &kp M      &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT
&none        &none   &none   &kp LEFT_GUI  &kp SPACE          &kp LCTRL       &kp LEFT_ALT    &kp BACKSPACE  &kp RET                  &kp SPACE  &kp LEFT   &kp DOWN  &kp UP    &kp RIGHT
            >;
        };

        functional_layer {
            bindings = <
&trans  &kp F1   &kp F2   &kp F3       &kp F4       &kp F5                                              &kp F6    &kp F7    &kp F8    &kp F9         &kp F10        &kp F11
&trans  &none    &none    &none        &none        &none    &trans                             &trans  &none     &none     &none     &none          &none          &kp F12
&trans  &none    &none    &none        &none        &none    &kp PRINTSCREEN                    &trans  &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT      &none          &trans
&trans  &kp F13  &kp F14  &kp LG(F15)  &kp LG(F16)  &kp F17  &kp INSERT       &trans    &trans  &trans  &none     &none     &none     &none          &kp BACKSLASH  &trans
&trans  &trans   &trans   &trans       &trans                &trans           &trans    &trans  &trans            &trans    &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP    &kp END
            >;
        };

        numpad_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                    &trans     &trans        &trans        &trans        &trans           &trans
&trans  &none   &none   &none   &none   &none   &trans                    &trans  &kp PLUS   &kp NUMBER_7  &kp N8        &kp NUMBER_9  &kp KP_MULTIPLY  &trans
&trans  &none   &none   &none   &none   &none   &trans                    &trans  &kp MINUS  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp KP_DIVIDE    &trans
&trans  &none   &none   &none   &none   &none   &trans  &trans    &trans  &trans  &kp EQUAL  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &none            &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans    &trans  &trans             &kp NUMBER_0  &trans        &trans        &trans           &trans
            >;
        };

        control_layer {
            bindings = <
&bt BT_CLR_ALL  &trans        &trans        &trans        &trans        &trans                                               &kp C_BRIGHTNESS_INC  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_AUTO  &trans           &trans           &trans
&out OUT_TOG    &none         &none         &none         &none         &none         &bootloader                    &trans  &kp C_VOLUME_UP       &kp C_VOLUME_DOWN     &kp C_MUTE             &none            &none            &trans
&bt BT_CLR      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &sys_reset                     &trans  &rgb_ug RGB_HUI       &rgb_ug RGB_SAI       &rgb_ug RGB_BRI        &rgb_ug RGB_SPI  &rgb_ug RGB_EFF  &trans
&trans          &kp C_SLEEP   &kp LG(L)     &none         &none         &none         &trans       &trans    &trans  &trans  &rgb_ug RGB_HUD       &rgb_ug RGB_SAD       &rgb_ug RGB_BRD        &rgb_ug RGB_SPD  &rgb_ug RGB_EFR  &trans
&trans          &trans        &trans        &trans        &trans                      &trans       &trans    &trans  &trans                        &rgb_ug RGB_TOG       &trans                 &trans           &trans           &trans
            >;
        };
    };
};
